@model _99X_CBS.Models.CBS_Trainings

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CBS_Trainings</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Employee_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employee_Name)
                @Html.ValidationMessageFor(model => model.Employee_Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 yearpicker">
                @Html.EditorFor(model => model.Year)
                @Html.ValidationMessageFor(model => model.Year)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course_Name)
                @Html.ValidationMessageFor(model => model.Course_Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Training_Provider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training_Provider)
                @Html.ValidationMessageFor(model => model.Training_Provider)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Training_Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training_Type)
                @Html.ValidationMessageFor(model => model.Training_Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category)
                @Html.ValidationMessageFor(model => model.Category)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Training_Month, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training_Month)
                @Html.ValidationMessageFor(model => model.Training_Month)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time_Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time_Duration)
                @Html.ValidationMessageFor(model => model.Time_Duration)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Investment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Investment)
                @Html.ValidationMessageFor(model => model.Investment)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("CBS_Trainings_Manage"))
                {
                    @Html.EditorFor(model => model.EmpID)
                }
                else
                {
                    @Html.TextBox("EmpID", _99X_CBS.Models.CurrentUser.GetEmpID(Session, User), new { disabled = "disabled", @readonly = "readonly" })
                }
                @Html.ValidationMessageFor(model => model.EmpID)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Training_Focus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training_Focus)
                @Html.ValidationMessageFor(model => model.Training_Focus)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ForeignOrLocal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ForeignOrLocal)
                @Html.ValidationMessageFor(model => model.ForeignOrLocal)
            </div>
        </div>
        <!--<div class="form-group">
            @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Approved)
                @Html.ValidationMessageFor(model => model.Approved)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EditedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EditedBy)
                @Html.ValidationMessageFor(model => model.EditedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TargetRowID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetRowID)
                @Html.ValidationMessageFor(model => model.TargetRowID)
            </div>
        </div>-->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
