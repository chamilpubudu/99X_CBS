<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - 99X CBS Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">@App._GlobalAppName</a>
                
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">

                    @if ( User.Identity.IsAuthenticated ){
                        <li><a href="/CBS/Employee">CBS Reports</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">Edit Profile<b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                <li><a href="~/Profile/Attendances">Attendances</a></li>
                                <li><a href="~/Profile/Awards">Awards</a></li>
                                <li><a href="~/Profile/Bonuses">Bonuses</a></li>
                                <li><a href="~/Profile/CustomerFeedbackScore">CustomerFeedbackScore</a></li>
                                <li><a href="~/Profile/EmployeeBillingUtilization">EmployeeBillingUtilization</a></li>

                                <li><a href="~/Profile/Employees">Employees</a></li>
                                <li><a href="~/Profile/Engagement">Engagement</a></li>
                                <li><a href="~/Profile/FuelAllowances">FuelAllowances</a></li>
                                <li><a href="~/Profile/Increments">Increments</a></li>
                                <li><a href="~/Profile/MentorBuddy">MentorBuddy</a></li>

                                <li><a href="~/Profile/Promotions">Promotions</a></li>
                                <li><a href="~/Profile/PublicAppearences">PublicAppearences</a></li>
                                <li><a href="~/Profile/TechnologyExposure">TechnologyExposure</a></li>
                                <li><a href="~/Profile/Trainings">Trainings</a></li>
                                <li><a href="~/Profile/Travels">Travels</a></li>

                                <li><a href="~/Profile/UniversitySessions">UniversitySessions</a></li>
                                <li><a href="~/Profile/ValueInnovations">ValueInnovations</a></li>
                                <li><a href="~/Profile/"></a></li>
                            </ul>
                        </li>
                        if ( User.IsInRole("Admin") || User.IsInRole("Manager")){
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Settings<b class="caret"></b></a>
                                <ul class="dropdown-menu">
                                    <li><a href="/Admin/ReportSettings">Report Settings</a></li>
                                    <li><a href="/Admin/Settings">System Settings</a></li>
                                </ul>
                            </li>
                        }
                        if ( User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("CBS_Attendances_Manage")|| User.IsInRole("CBS_Awards_Manage")|| User.IsInRole("CBS_Bonuses_Manage")|| User.IsInRole("CBS_CustomerFeedbackScore_Manage")|| User.IsInRole("CBS_Employees_Manage")|| User.IsInRole("CBS_EmployeeBillingUtilization_Manage")|| User.IsInRole("CBS_Engagement_Manage")|| User.IsInRole("CBS_FuelAllowances_Manage")|| User.IsInRole("CBS_Increments_Manage")|| User.IsInRole("CBS_MentorBuddy_Manage")|| User.IsInRole("CBS_Promotions_Manage")|| User.IsInRole("CBS_PublicAppearences_Manage")|| User.IsInRole("CBS_TechnologyExposure_Manage")|| User.IsInRole("CBS_Trainings_Manage")|| User.IsInRole("CBS_Travels_Manage")|| User.IsInRole("CBS_UniversitySessions_Manage")|| User.IsInRole("CBS_ValueInnovations_Manage")){
                            <li><a href="/Admin/DataUpload">Bulk Data Upload</a></li>    
                            <li><a href="/Admin/DataApprove">Approve User Changes</a></li>
                        }
                        if ( User.IsInRole("Admin") || User.IsInRole("Manager")){
                            <li>@Html.ActionLink("Account", "Index", "Account")</li>
                        }
                    }
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - CBS Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jquery.signalR")
    @RenderSection("scripts", required: false)
</body>
</html>

    <script src="~/signalr/hubs"></script>
        <script>
            // Reference the auto-generated proxy for the hub.  
            var chat = $.connection.notificationHub;
            chat.client.setInitialNotifications = function (messages) {
               // alert(messages);
                messages = jQuery.parseJSON(messages);
                for (var index = 0; messages.length > index; index++) {
                    var message = messages[index];
                    addNotification(message.Message, message.Link, message.Viewed, message.ID);
                }
            };

            chat.client.reloadNotifications = function () {
                $('#notificationsBody').text("");
                $("#notification_count").fadeOut("slow");
                $("#notification_count").text("0");
                chat.server.getInitialNotifications();
            };

            function checkNotification(link, notificationID, viewed) {
                if (!viewed) {
                    chat.server.viewNotification(notificationID);
                }
                location.href = link;
            };

            function addNotification(message, link, viewed, notificationID) {
                $('#notificationsBody').append("<div class='notification message hasClick animateIn' onclick=\"checkNotification('" + link + "'," + notificationID + "," + viewed + ");\">" +
                        "<span class='icon'></span>"+
                        "<span class='notifyText'>"+
                            "<span class='notifyTitle'>"+ htmlEncode('Notification')+"</span>"+
                            "<span class='notifyMessage'>" + htmlEncode(message) + "</span>" +
                        "</span>"+
                    "</div>");
                var notificationCount = parseInt($("#notification_count").text());
                if (!viewed){
                    notificationCount = notificationCount + 1;
                }
                if (notificationCount > 0) {
                    $("#notification_count").text(notificationCount);
                    $("#notification_count").fadeIn("high");
                }
            };



            // Start the connection.
            $.connection.hub.start().done(function () {
                chat.server.getInitialNotifications();
            });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        </script>